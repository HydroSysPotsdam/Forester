// JavaScript !only! for visualization
// Python     !only! for calculations

{
    // metadata describing tree
    data_name:          "name of data",
    type:               "classification | regression",
    features:           "list of features",
    samples:            "number of samples",
    statistics_split:   "list of calculated split statistics",
    statistics_summary: "list of calculated summary statistics",

    // data that was used? --> maybe not part of this object but retrievable using the data_name
    data: {
        map_index: "whether the ids map the indices of the instances",
        id: ["unique instance ids"],
        feature1: ["..."],
        feature2: ["..."],
    },

    // the actual tree (maybe flattened and saved in array structure)
    tree: {
        id:             "unique id in tree",
        type:           "root | split | leaf",
        depth:          "depth of this node (root = 0)",
        children:       ["other nodes"], // children have the same structure
        total_children: "total number of children connected to this node",
        samples:        "samples at the node",
        in:             ["class distribution going in" | "regression values going in"]
        vote:           "majority vote class" | "regression value" | unknown
        split:    {
            type:      "< | > | == | != ..." // feature type location
            feature:   "feature to split",
            location:  "location of split",
            direction: ">"
            inclusive: "yes | no",
            statistics: {
                gini:  "gini impurity of split",
                hstat: "h statistics of split"
                // ...
            }
        }
    },

    summary: {
        // summary stuff
    }
}